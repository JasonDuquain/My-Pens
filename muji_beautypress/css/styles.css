:root {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  --navheight: 0;
  --logowidth: 0;
}

*, ::before, ::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
  outline: none;
}

body {
  font-size: 100%;
  scroll-behavior: smooth;
  font-family: 'Frank Ruhl Libre', serif;
  color: #333;
}

a:active {
  color: #bf2b58;
}

.hero {
  display: grid;
  grid-template-columns: 1.3fr 1fr;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background-color: bisque;
  padding: 0;
  position: relative;
  left: 2.5em;
  width: calc(100% - 2.5em);
  height: 40vw;
  position: relative;
  -webkit-perspective: 1000px;
          perspective: 1000px;
  overflow: hidden;
  visibility: hidden;
  /* no need to use calc and multiply times 1px as the getPropertyValue pull the px */
  margin-top: var(--navheight);
}

.hero::after {
  content: "";
  position: absolute;
  background-color: rgba(255, 255, 255, 0.4);
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  -webkit-transform: rotateY(-90deg) scale(0.95);
          transform: rotateY(-90deg) scale(0.95);
  opacity: 0;
  z-index: -1;
}

.hero__sect--one {
  position: relative;
}

.hero__sect--one::after {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: -2.5em;
  right: 100%;
  background-color: #000;
}

.hero__image {
  max-width: 100%;
  height: auto;
  display: block;
  -webkit-transform: translateX(-2.5em);
          transform: translateX(-2.5em);
  opacity: 0;
}

.hero__sect--two_wrap {
  text-align: center;
  padding-right: 12em;
}

.hero__subheading--wrap {
  position: relative;
  margin-bottom: .5em;
}

.hero__subheading--wrap::after {
  position: absolute;
  content: "";
  top: 0;
  left: 10%;
  right: 90%;
  bottom: 0;
  background-color: #ab6bdb;
}

.hero__subheading {
  font-family: 'Mrs Saint Delafield', cursive;
  font-size: 3.75vw;
  white-space: nowrap;
  display: inline-block;
  opacity: 0;
}

.hero__heading-wrap {
  position: relative;
}

.hero__heading-wrap::after {
  position: absolute;
  content: "";
  top: 0;
  left: 0;
  right: 100%;
  bottom: 0;
  background-color: #ab6bdb;
}

.hero__heading {
  font-size: 4.75vw;
  line-height: 1;
  opacity: 0;
}

.hero__heading--span {
  display: block;
}

.hero__button--wrap {
  position: relative;
  margin-top: .75em;
}

.hero__button--wrap::after {
  position: absolute;
  content: "";
  top: 0;
  left: 20%;
  right: 80%;
  bottom: 0;
  background-color: #ab6bdb;
}

.hero__button {
  display: inline-block;
  width: 12em;
  padding: 1em;
  background-color: rgba(171, 107, 219, 0.4);
  color: #fff;
  text-transform: uppercase;
  border-radius: 99em;
  margin-top: 1em;
  opacity: 0;
}

.nav {
  background-color: #ab6bdb;
  color: #fff;
  -webkit-transform-origin: top center;
          transform-origin: top center;
  -webkit-transition: -webkit-transform 900ms ease-out;
  transition: -webkit-transform 900ms ease-out;
  transition: transform 900ms ease-out;
  transition: transform 900ms ease-out, -webkit-transform 900ms ease-out;
  -webkit-transform: perspective(525px) rotateX(0deg);
          transform: perspective(525px) rotateX(0deg);
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 20000;
}

.nav.is--scrolling {
  -webkit-transform: perspective(525px) rotateX(-140deg);
          transform: perspective(525px) rotateX(-140deg);
}

.nav__wrap {
  max-width: 1280px;
  padding: 0 2.5em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.nav__logo {
  color: #222;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  text-align: center;
  -ms-flex-item-align: stretch;
      align-self: stretch;
  background-color: #fff;
  text-transform: uppercase;
  margin-left: 3em;
  padding: 1em 1.5em;
  font-weight: 700;
  font-size: 1.3em;
  line-height: 3.5em;
  position: relative;
}

.nav__logo::before {
  content: "";
  position: absolute;
  background-color: transparent;
  height: 0;
  width: 0;
  /* width of logo divided by 2 (border left + border right === logo width -- using css vars to make width adjust to whatever logo width is at any brkpt) */
  /* logowidth is already in px so the dividing is working?? */
  border: calc(var(--logowidth) / 2) solid transparent;
  /* make border shorter */
  border-top: 2.5em solid #fff;
  left: 0;
  top: 100%;
  z-index: 19500;
}

.nav__list {
  -webkit-box-flex: 9;
      -ms-flex: 9;
          flex: 9;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: 2.5em;
}

.nav__item:not(:last-of-type) {
  margin-right: 1.5em;
}

.before {
  padding: 2em;
  margin: 4em 0;
}

.before__wrap {
  display: grid;
  grid-template-columns: 1fr 1fr;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 2em 0;
}

.before__sect-one-wrap {
  margin: 2em auto;
  padding: 2em 1em;
  width: 60%;
  border: 10px solid #ab6bdb;
  border-right: none;
  position: relative;
}

.before__sect-one-wrap::before, .before__sect-one-wrap::after {
  content: "";
  position: absolute;
  height: 40px;
  right: 0;
  background-color: #ab6bdb;
  border-right: 10px solid #ab6bdb;
  top: 0;
}

.before__sect-one-wrap::after {
  bottom: 0;
  top: auto;
}

.before__heading {
  margin: 1em 0;
  font-size: 1.75em;
  line-height: 1;
}

.before__subheading {
  font-size: 1.3em;
  margin-top: 2em;
}

.before__paragraph {
  margin: 1em 0 2em 0;
  line-height: 1.4;
  width: 120%;
}

.before__sect-two {
  width: 549px;
  height: 400px;
  position: relative;
}

.before__before {
  background-image: url("../img/before-after-2.jpg");
  background-repeat: no-repeat;
  width: 549px;
  height: 400px;
}

.before__after {
  position: absolute;
  z-index: 99;
  background-image: url("../img/before-after-1.jpg");
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 50%;
}

.before__range {
  cursor: w-resize;
  -webkit-filter: contrast(0.5);
          filter: contrast(0.5);
  position: absolute;
  bottom: 1em;
  left: 0;
  width: 100%;
  z-index: 99;
}

.skew {
  margin: 6em 0;
  background-color: rgba(171, 107, 219, 0.4);
  -webkit-clip-path: polygon(0% 3vw, 50% 0%, 100% 3vw, 100% 100%, 0% 100%);
          clip-path: polygon(0% 3vw, 50% 0%, 100% 3vw, 100% 100%, 0% 100%);
}

.skew__wrap {
  display: grid;
  grid-template-columns: 1fr 1fr;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.skew__sect-one {
  /*&::before {
            content: "";
            position: absolute;
            height: 130px;
            width: 100%;
            background-color: red;
            top: 0;
            left: -50px;
            transform: rotate(-10deg);
            transform-origin: left center;
        }*/
}

.skew__image {
  max-width: 100%;
  height: auto;
  display: block;
}

.skew__sect-two {
  padding: 2em;
  color: #fff;
  /*&::before {
            content: "";
            position: absolute;
            right: -50px;
            height: 130px;
            width: 100%;
            background-color: red;
            top: 0;
            transform: rotate(10deg);
            transform-origin: right center;
        }*/
}

.totals {
  margin: 8em 0 40em 0;
  padding: 0 10em;
}

.totals__wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.totals__box {
  margin: 0 3em;
}

.totals p {
  font-size: 3em;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
